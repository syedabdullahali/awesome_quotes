{"version":3,"file":"static/js/989.86bca36b.chunk.js","mappings":"mMACA,EAAwB,gC,SCUxB,EATyB,SAACA,GACxB,OACE,oBAAQC,UAAWC,EAAc,WAC/B,uBAAIF,EAAMG,QACV,gCAAaH,EAAMI,WAGzB,E,2BCyCA,MA1CA,WACI,OAAqDC,EAAAA,EAAAA,GAAQC,EAAAA,IAAe,GAArEC,EAAW,EAAXA,YAAYC,EAAM,EAANA,OAAYC,EAAY,EAAjBC,KAAkBC,EAAK,EAALA,MAErCC,GAAUC,EAAAA,EAAAA,MAAVD,QAMP,OAJAE,EAAAA,EAAAA,YAAU,WACVP,EAAYK,EACZ,GAAE,CAACL,EAAYK,IAEH,YAATJ,GAEG,gBAAKP,UAAU,UAAS,UACtB,SAACc,EAAA,EAAc,MAIlBJ,GACM,cAAGV,UAAU,mBAAkB,SAAEU,IAGxCF,GAWD,UAAC,EAAAO,SAAQ,YAChB,SAAC,EAAgB,CAACb,KAAkB,OAAZM,QAAY,IAAZA,OAAY,EAAZA,EAAcN,KAAMC,OAAoB,OAAZK,QAAY,IAAZA,OAAY,EAAZA,EAAcL,UAClE,gBAAKH,UAAU,UAAS,SACvB,kBAAWW,KAAYK,OAAOC,SAASC,WACxC,SAAC,KAAI,CAAClB,UAAU,YAAYmB,GAAE,kBAAaR,EAAO,aAAY,8BAE9D,SAAC,KAAM,QAfQ,0CAkBf,C","sources":["webpack://practice_project/./src/components/quotes/HighlightedQuote.module.css?c98c","components/quotes/HighlightedQuote.js","Page/QuoteDetails.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"quote\":\"HighlightedQuote_quote__NKkrd\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import {Fragment,useEffect} from 'react'\r\nimport {useParams,Route,Routes,Outlet, Link}from 'react-router-dom'\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote'\r\nimport useHttp from '../components/hook/use-http'\r\nimport { getSingleQuote } from '../components/lib/api'\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\r\n\r\n\r\nfunction QuoteDetails(){\r\n    const {sendRequest,status,data:loadedQuotes,error} = useHttp(getSingleQuote,true)\r\n\r\n    const {quoteId}= useParams()\r\n    \r\n    useEffect(()=>{\r\n    sendRequest(quoteId);\r\n    },[sendRequest,quoteId]);\r\n\r\n    if(status==='pending'){\r\n        return(\r\n          <div className='centerd'>\r\n            <LoadingSpinner/>  \r\n          </div>\r\n        )\r\n      }\r\n      if(error){\r\n        return <p className='centered focused'>{error}</p>\r\n    }\r\n\r\n    if(!loadedQuotes){\r\n        \r\n        return <p>No quote found!</p>\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\nreturn <Fragment>\r\n<HighlightedQuote text={loadedQuotes?.text} author={loadedQuotes?.author} />\r\n<div className='centerd'>\r\n{`/quotes/${quoteId}`===window.location.pathname &&\r\n<Link className='btn--flat' to={`/quotes/${quoteId}/comments`}>Load Comments</Link>}\r\n</div>\r\n<Outlet/>\r\n</Fragment>\r\n\r\n}\r\n\r\nexport default QuoteDetails"],"names":["props","className","classes","text","author","useHttp","getSingleQuote","sendRequest","status","loadedQuotes","data","error","quoteId","useParams","useEffect","LoadingSpinner","Fragment","window","location","pathname","to"],"sourceRoot":""}