{"version":3,"file":"static/js/356.fbac7aec.chunk.js","mappings":"mMACA,EAAuB,wB,SCkBvB,EAhBkB,SAACA,GACjB,OACE,gBAAIC,UAAWC,EAAa,WAC1B,+BACE,iCACE,uBAAIF,EAAMG,UAEZ,gCAAaH,EAAMI,aAErB,SAAC,KAAI,CAACH,UAAU,MAAMI,GAAE,kBAAaL,EAAMM,IAAK,+BAKtD,EChBA,EAAuB,wBAAvB,EAAyD,2BCqDzD,EAlCkB,SAACN,GACjB,IAfiBO,EAAOC,EAelBC,GAAaC,EAAAA,EAAAA,MACbC,GAAWC,EAAAA,EAAAA,MAIbC,EAAiD,QAFhC,IAAIC,gBAAgBH,EAASI,QAEZC,IAAI,QAEtCC,GAtBaV,EAsBWP,EAAMO,OAtBVC,EAsBiBK,EApBnCN,EAAOW,MAAK,SAACC,EAAOC,GAE1B,OAAGZ,EACMW,EAAOb,GAAIc,EAAOd,GAAI,GAAG,EAEzBa,EAAOb,GAAGc,EAAOd,GAAI,GAAG,CAGlC,KAmBC,OACE,UAAC,EAAAe,SAAQ,YACN,gBAAKpB,UAAWC,EAAgB,UAC3B,oBAAQoB,QAPQ,WACvBb,EAAW,UAAUI,EAAmB,OAAO,OACpD,EAKkD,kBAAOA,EAAmB,YAAY,kBAElF,eAAIZ,UAAWC,EAAa,SACzBe,EAAaM,KAAI,SAACC,GAAK,OACtB,SAAC,EAAS,CAERlB,GAAIkB,EAAMlB,GACVF,OAAQoB,EAAMpB,OACdD,KAAMqB,EAAMrB,MAHPqB,EAAMlB,GAIX,QAKZ,E,2BCnDA,EAA2B,gCCa3B,EAXsB,WACpB,OACE,iBAAKL,UAAWC,EAAiB,WAC/B,6CACA,SAAC,KAAI,CAACD,UAAU,MAAMI,GAAG,aAAY,2BAK3C,EC8BA,MAjCA,WAEI,OAAqDoB,EAAAA,EAAAA,GACjDC,EAAAA,IACA,GAFGC,EAAW,EAAXA,YAAYC,EAAM,EAANA,OAAYC,EAAY,EAAjBC,KAAkBC,EAAK,EAALA,MAS5C,OAJAC,EAAAA,EAAAA,YAAU,WACNL,GACJ,GAAE,CAACA,IAES,YAATC,GAEC,gBAAK3B,UAAU,UAAS,UACpB,SAACgC,EAAA,EAAc,MAKpBF,GACQ,cAAG9B,UAAU,mBAAkB,SAAE8B,IAGhC,cAATH,GAA0BC,GAAwC,IAAxBA,EAAaK,QAQxD,SAAC,EAAS,CAAC3B,OAAQsB,KANV,SAAE,EAAa,GAO9B,C","sources":["webpack://practice_project/./src/components/quotes/QuoteItem.module.css?127c","components/quotes/QuoteItem.js","webpack://practice_project/./src/components/quotes/QuoteList.module.css?9d5d","components/quotes/QuoteList.js","webpack://practice_project/./src/components/quotes/NoQuotesFound.module.css?2c4b","components/quotes/NoQuotesFound.js","Page/AllQuotes.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"QuoteItem_item__CJVgf\"};","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"QuoteList_list__lGvGt\",\"sorting\":\"QuoteList_sorting__Zw+iZ\"};","import { Fragment } from 'react';\nimport { useNavigate,useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuots = (quotes,ascending)=>{\n\n return quotes.sort((quoteA,quoteB)=>{\n\n  if(ascending){\n    return quoteA.id> quoteB.id ?1:-1\n  }else{\n    return quoteA.id<quoteB.id ?1:-1\n\n  }\n })\n  \n}\n\nconst QuoteList = (props) => {\n  const changePath = useNavigate()\n  const location = useLocation()\n\nconst querryParams =   new URLSearchParams(location.search)\n\nconst isSortingAscending = querryParams.get('sort') ==='asc'\n\nconst sortedQuotes =sortQuots(props.quotes,isSortingAscending)\n\n\nconst changeSortingHandler =()=>{\n     changePath('?sort='+(isSortingAscending?'desc':'asc'))\n}\n\n  return (\n    <Fragment>\n       <div className={classes.sorting}>\n            <button onClick={changeSortingHandler}>Sort {isSortingAscending?'Desending':'Ascending'}</button>\n       </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","// extracted by mini-css-extract-plugin\nexport default {\"noquotes\":\"NoQuotesFound_noquotes__F-+Ul\"};","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import QuoteList from '../components/quotes/QuoteList'\r\nimport useHttp from '../components/hook/use-http'\r\nimport { getAllQuotes } from '../components/lib/api'\r\nimport { useEffect } from 'react'\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner'\r\nimport  NoQuotesFound from '../components/quotes/NoQuotesFound'\r\n\r\n\r\n\r\nfunction AllQuotes(){\r\n\r\n    const {sendRequest,status,data:loadedQuotes,error} = useHttp(\r\n        getAllQuotes,\r\n        true\r\n    )\r\n\r\n    useEffect(()=>{\r\n        sendRequest()\r\n    },[sendRequest])\r\n\r\n    if(status==='pending'){\r\n      return(\r\n        <div className='centerd'>\r\n            <LoadingSpinner/>    \r\n        </div>\r\n      )\r\n    }\r\n\r\n    if(error){\r\n        return <p className='centered focused'>{error}</p>\r\n    }\r\n\r\n    if(status==='completed' && (!loadedQuotes || loadedQuotes.length === 0)){\r\n        \r\n        return < NoQuotesFound/>\r\n\r\n    }\r\n\r\n\r\n    \r\nreturn<QuoteList quotes={loadedQuotes}/>\r\n}\r\nexport default AllQuotes"],"names":["props","className","classes","text","author","to","id","quotes","ascending","changePath","useNavigate","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","Fragment","onClick","map","quote","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"sourceRoot":""}